confm-1.10 [???]
===========================

Enhancements:
    
  - confm: The ch.ethz.ssh2.Connection object used by a
    com.tailf.inm.SSHConnection instance can now be accessed via the new
    method com.tailf.inm.SSHConnection.getGanymedConnection.

    (#6450 / RT7897 / r38168)

Corrections:

  - confdc: Fixed two bugs related to revision compilation
    ('confdc --revision-merge'):
    
    - It wasn't possible to add a default value to a previous optional leaf.

    - It wasn't possible to loose a restriction on a leaf entirely.

    (#6689 / RT8226 / r39362)

  - confm: The methods for sending and receiving NETCONF rpcs in
    com.tailf.inm.NetconfSession did not check the message-id of the
    received rpc-reply against the message-id of the sent rpc. This has
    been fixed, so that if the sent message-id is known, the received
    message-id is checked and in the case of a mismatch an INMException
    is thrown.

    (#6454 / RT7898 / r38905)
 

confm-1.9.1.2 [September 6, 2011]
=================================

Corrections:

  - confdc: Revision compilation when lists were added to the model was
    wrong. Also revision compilation of three or more fxs files, i.e when
    three or more revisions are merged, was wrong. Revision information on
    leaves in the first (oldest) revision) was dropped. This has been fixed.

    (Issue tracker: #8135)

  - confm: The query part of a capability sent from the managed device was
    parsed erroneously when the query part consisted of two or more
    key/value pairs. This has been fixed.


confm-1.9.1.1 [July 27, 2011]
=============================

Corrections:

  - confdc: confdc would fail to compile a module which has a leafref to a
    leaf in another module, which in its turn is a leafreaf to a leaf with
    a type defined in a submodule. This has been fixed.

    (Issue tracker: #7705)

  - confdc: confdc / pyang would crash if submodules were circularly
    included, and a leafref path contained references to one of the
    circularly included submodules. This has been fixed.

    (Issue tracker: #7705, #7797, #7806)


confm-1.9.1 [July 7, 2011]
==========================

Corrections:

  - confdc: If a leafref pointed to a leaf in another module, which had a
    type defined in a submodule, confdc would fail to compile the module.
    This has been fixed.

    (Issue tracker: #7664)


confm-1.9 [June 9, 2011]
========================

Enhancements:

  - Examples: To illustrate how to work with RPC and actions using ConfM,
    examples/rpc_and_actions/ has been added to the example suite.

    (Issue tracker: #2948)

Corrections:

  - confdc: The YANG if-feature statement did not work in combination with
    ConfM Java class generation. This has been fixed.

  - confm: The type class generated for inet:InetAddressIP did not accept a
    string hostname value. This has been fixed.

    (Issue tracker: #7461)

  - confm: A java.lang.NullPointerException was thrown when
    NetconfSession.action() was called if
    RevisionInfo.enableOlderRevisionSupport() was called prior to it. This
    has been fixed.

    (Issue tracker: #7634)


confm-1.8.0.2 [May 5, 2011]
===========================

Corrections:

  - confm: 'confdc --external-schema' was not compatible with augmenting.
    This has been fixed.

    (Issue tracker: #7416)


confm-1.8.0.1 [April 29, 2011]
==============================

Corrections:

  - confdc: Pattern restrictions could not be used in YANG modules in
    combination with 'confdc --revision-merge'. This has been fixed.

    (Issue tracker: #7391)

  - confdc: 'confdc --external-schema' did not work on an fxs file generated
    with 'confdc --revision-merge'. This has been fixed.

    (Issue tracker: #7392)

  - confdc: If a YANG module contained tailf:action statements the schema
    information generated by 'confdc --revision-merge ...' was incomplete.
    This has been fixed.

    (Issue tracker: #7395)


confm-1.8 [April 14, 2011]
==========================

Enhancements:

  - confm: The library function NetconfSession.callRpc() has been added to
    make it possible to call custom RPC methods. An example has been added
    showing how this function can be used: examples/rpc_and_actions/.

    (Issue tracker: #7031)

  - confm: ConfM will now look for the schema file produced by 'confdc
    --external-schema' in the CLASSPATH. Previously it had to be in the
    current directory where the Java machine was started.

    (Issue tracker: #5315)

Corrections:

  - confdc: Regular expressions containing \t, \r and \n now behave as
    expected, i.e. generated code is possible to compile and the escape
    characters keep their meaning in run-time.

    (Issue tracker: #6646)

  - confdc: 'confdc --revision-merge' could not be performed on Windows
    platforms. This has been fixed.

    (Issue tracker: #7271)

  - confm: Container.syncMerge() could throw an exception for certain YANG
    module setups. This has been fixed.

    (Issue tracker: #7135)

  - confm: The Path class did not accept escaping in the regular
    expressions. This has been fixed.

    (Issue tracker: #5592)

  - confm: Elem.toXMLString() now returns valid XML also when "&" and
    "&amp;" are used in PCDATA.

    (Issue tracker: #5082)


confm-1.7 [February 10, 2011]
=============================

Enhancements:

  - Leaf-lists are now handled by the ConfM library.

Corrections:

  - Quote, \n and \t characters were not handled correctly in data
    model patterns. This has been fixed.
    
    (Issue tracker: #6646)

  - Container.syncMerge() did throw a NullPointerException for certain
    data models. This has been fixed.
    
    (Issue tracker: #6295)

  - NetconfSession.get() without any parameters failed. This has been
    fixed. The workaround in previous releases is to call to
    NetconfSession.get("/"). 


confm-1.6.5.2 [Aug 19, 2010]
============================

Corrections:

  - The method which converts a string representation to a byte array
    in the HexList class was broken. This has been fixed.


confm-1.6.5.1 [Aug 2, 2010]
===========================

Corrections:

  - Data models with pattern statements did occasionally break confdc
    --confm-emit-java, i.e. confdc hanged. This has been fixed.


confm-1.6.5 [July 28, 2010]
===========================

Corrections:

  - The ConfD HexList and OctetList types did not accept zero length
    payload. As a result instantiating the type classes UDPTMask and
    SnmpTargetAddrEngineIDType generated from the SNMP-TARGET-MIB.cs
    failed when the values were empty strings. This has been fixed.

  - The namespace and its prefix were lost for mounted dynamic
    elements. This lead to "unknown" prefixes being used whenever XML
    payload was generated and sent to the NETCONF server. This has been
    fixed.


confm-1.6.4 [July 16, 2010]
===========================

Enhancements:

  - Full support for NETCONF notifications has been added to ConfM. This
    has always worked with INM, but now it also works with ConfM.

Corrections:

  - The confdc flags --external-schema was broken for data models that use
    mountNamespace


confm-1.6.3 [July 15, 2010]
===========================

Enhancements:

  - Added an example describing model revision management

Corrections:
 
  - Fixed a bug when the data nodel had integer size restrictions 
    containing integers larger/smaller than Java max/min long

  - Fixed a bug where models referring to SNMP smi builtins
    Counter32/64 or gauge32 couldn't be compiled

  - Added a check whereby confdc refuses to compile models
    that use mountNamespace

  - Fixed several class generation bugs releated to mountNamespace   


confm-1.6.2 [July 1, 2010]
==========================

Corrections:

 - Yet another bug relating to multiple namespaces fixed. 


confm-1.6.1 [July 1, 2010]
==========================

Corrections:

  - When compiling namespaces that either use YANG augment or the
    confspec mountNamespace feature whereby one XML namespace is
    mounted into another - several bugs were fixed.
  

  - When using multiple namespaces, whereby one namespace refers to another
    the ConfM class generation must be aware of which Java package name
    was used. This has been solved by allowing the --java-package <name>
    to be used when linking the .fxs files.
    Example a.cs uses constructs in b.cs
    When we create b.fxs and then also generate Java classes for b.cs
    we must use the same --java-package flag when both creating the .fxs flag
    and then also creating the ConfM classes.
    Later when we create Java classes for b.cs, the file a.fxs must be
    used as a -f dependency, the file a.fxs then also contains the 
    --java-package information.


confm-1.6 [May 19, 2010]
========================

Enhancements:

  - backplane: ConfM is now capable of generating data model aware Java
    code which works with several revisions of the same data model. Read
    more about this in chapter 12: Revisioning, in the ConfM User Guide.

  - confdc: Inline types and range types in YANG modules generated
    anonymous Java ConfM classes named T<n>.java. This behaviour has
    been removed.

Corrections:

  - backplane: Large YANG modules/Confspec files could potentially
    generate so much static schema information in the generated ConfM
    Java classes that the Java compiler barfs with a "code too large"
    error, i.e. 64KB is a hard limit for static class data in Java. To
    resolve this we have added the confdc option --external-schema which
    can be used in combination with --confm-emit-java to generate schema
    information in a separate XML file instead of being generated inline
    in the generated Java code.

  - confdc: YANG augment statements were not handled correctly by
    confdc. this has been fixed.


confm-1.5.3 [February 24, 2010]
===============================

Corrections:

  - confdc: xs:maxLength did not work corectly for xs:list values, this
    has been fixed.

    (Issue tracker: #4034)

  - confm-java:
    An object of type xs:dateTime() with leading zeros on the fraction
    part threw an exception on toString();

    (Issue tracker: #3896)

  - confm-java: Device.closeSession() was wrong, the session was never
    removed.

    Device.closeSession() closed the entire SSH socket as opposed to
    just closing the relevant SSH channel.

    (Issue tracker: #3974)


confm-1.5.2 [November 06, 2009]
===============================

Corrections:

  - backplane: ConfDSession.action() did not handle actions with result
    payload. The reason was that no classes were generated for action
    params and result. This has been fixed.

    (Issue tracker: #3829)

  - backplane: A number of issues with Container.syncMerge() have been
    fixed.

    (Issue tracker: #3683)


confm-1.5.1 [October 06, 2009]
==============================

Enhancements:

  - backplane: A new method Container.syncMerge() has been added that
    produces a NETCONF tree utilizing the NETCONF merge operation
    instead of the "replace" operation. It is generally more efficient
    to use merge than replace.

    (Issue tracker: #3601)

  - backplane: API enhanced so that several methods now take also a
    NodeSet as a parameter as opposed to just a Container. The previous
    API wasn't possible to use when tha data model contained multiple
    top elements.

    (Issue tracker: #3202)

  - backplane: Added support for doing editConfig() as well as
    sync()/checkSync() also on data model that have multiple top
    elements.

    (Issue tracker: #3201)

  - backplane: Make protected meta methods public making it possible to
    extract key/child info from Java objects.

    (Issue tracker: #3181)

  - confdc: --confm-emit-java generated a single class file for multiple
    simpleTypes at certain situations, i.e. the class names were derived
    from the origibnal name, replacing "-" with a capital leter etc. For
    example, the types "e1-port" and "E1Port" resulted in a single type
    on disk. This is recognized in this release and a warning is
    produced by confdc. To resolve this a you have to add a
    cs:generatedName attribute to one of the conflicting simpleTypes,
    e.g.

    <xs:simpleType name="e1-port" cs:generatedName="E1Port2">
     ...
    </xs:simpleType>

    (Issue tracker: #3254)

  - confdc: A new option --case-insensitive-naming has been added to
    support case insensitive naming of generated classes produced by the
    confdc option --confm-emit-java in combination with the option
    --java-class-naming, e.g. similar files such FOOBar.java and
    FooBar.java will no longer be generated. Instead the name of the
    parent element will be prepended to avoid the conflict (read more
    about --java-class-naming and --case-insensitive-naming in the
    confdc(1) manual page). This new option has been added to cater for
    case insensitive file systems such as FAT32.

    (Issue tracker: #3394)

Corrections:

  - confdc: Multiple xs:pattern in a single xs:restriction were not
    handled correctly. This has been fixed.

    (Issue tracker: #3556)

  - confdc: unset and markDelete methods were not generated for
    mandatory elements. This has been fixed.

    (Issue tracker: #3510)

  - confm: Notifications using lists were not accepted by "confdc
    --confm-emit-java". This has been fixed.

  - confm: Dynamic elements fetched using a call to Session.getConfig()
    did not keep the order between the dynamic elements as defined in
    the NETCONF request recived by the NETCONF target device.

    (Issue tracker: #3363)


confm-1.5.0.4 [Sep 18, 2009]
============================

Corrections:

  - backplane: The fix in confm-1.5.0.3 made it impossible to decide if an
    element exists. This is now fixed so that the generated access methods
    for existence leafs now either return null if the element doesn't
    exists, or an Exists object if the element exists.

    (Issue tracker: #3538)


confm-1.5.0.3 [Sep 17, 2009]
============================

Corrections:

  - backplane: compare() between objects representing typeless existance
    elements failed if one object was created through the XML parser and the
    other through explicit constructor calls to the generated classes. This
    has been fixed.

    (Issue tracker: #3538)


confm-1.5.0.2 [Sep 10, 2009]
============================

Corrections:

  - backplane: The fix in ConfM-1.5.0.1 only partially fixed the 
    problem, i.e. several dynamic elements (without private wrapper
    containers) under a common parent container misbehaved the same
    way as described in #3818. This has been fixed.


confm-1.5.0.1 [Sep 4, 2009]
===========================

Corrections:

  - backplane: Dynamic elements fetched using a call to
    Session.getConfig() did not keep the order between the dynamic
    elements as defined in the NETCONF request received by the NETCONF
    target device.

    (Issue tracker: #3818)


confm-1.5 [June 25, 2009]
=========================

Corrections:

  - backplane: Whenever ConfM was used to send config data through RMI
    the namespace got lost and an extra ":" char was prepended to each
    XML tag, e.g.:

    <:config xmlns="http://www.acme.com/ns/example/bar/1.0"
             xmlns:bar="http://www.acme.com/ns/example/bar/1.0">
      <:interface>
        <:eth></:eth>
      </:interface>
    </:config>

    instead of:

    <config xmlns="http://www.acme.com/ns/example/bar/1.0"
            xmlns:bar="http://www.acme.com/ns/example/bar/1.0">
      <interface>
        <eth></eth>
      </interface>
    </config>

    (Issue tracker: #3033)

  - backplane: A number of bugs found in code generated by confdc
    --confm-emit-java.

    1) min and max exclusive/inclusive simpleType facets which refered
    to large numbers was not suffixed with an "L".
    2) The built-in class com.tailf.confm.confd.OID was refered to as
    com.tailf.confm.confd.Oid in generated code.
    3) Whenever the ConfD InetAddressIPv6 simpleType was used as a base
    for a simpleType derivation the generated code was broken.
    4) The pattern facet was not supported by the
    com.tailf.confm.confd.HexList simpleType class.

    These issues have been fixed.

    (Issue tracker: #3075)


confm-1.4.2 [May 20, 2009]
==========================

Corrections:

  - backplane: The ConfM insert methods added container children (leaf
    and other container elements) in the wrong order. This has been
    fixed.

    (Issue tracker: #2870)

  - backplane: Container.sync() had problem syncing whenever a confpec
    file congtained dynamic elements nested directly under
    dynamic elements (without a static container in between). This has
    been fixed.

    (Issue tracker: #2852)

  - confm: It was not possible to ConfM compile classes that combined a
    restriction on integers with a pattern.

    (Issue tracker: #2822)


confm-1.4.1 [April 23, 2009]
============================

Corrections:

  - confdc: existence elements (elements without type definitions) were
    not handled correctly in the generated code. This has been fixed.

  - confdc: A class is now generated also for xs:simpleTypes which is
    implemented with a typepoint. The generated class is defined as
    being based on a xs:string.


confm-1.4 [March 27, 2009]
==========================

Non-backwards compatible enhancements:

  - Java: Unsigned 64 bit integers were internally represented as a long.
    Thus all values in the valuespace were not possible to represent. It is
    now internally represented as a BigInteger. Thus all users of this class
    must check their calls to val.getValue() which now returns a BigInteger
    as opposed to a long. (Issue tracker: #2591).

Enhancements:

  - confdc: The new YANG 'choice' construct is now handled by 
    'confdc --confm-emit-java'.

Corrections:

  - confdc: typepoint in confspec files made 'confdc --confm-emit-java'
    return "Internal error".

    leaf-lists (dynamic elements without keys) in confspec files made
    'confdc --confm-emit-java' return "Internal error".

    These two bugs have been fixed.

    --verbose can furthermore be used in combination with --confm-emit-java
    to get more info about the code generation process.


confm-1.3.1 [March 10, 2009]
============================

Enhancements:

  - Made the Device class use a ConfDSession object instead of a
    NetconfSession object. This should be completely backwards compatible.
    Also added some miscellaneous access functions to Device, DeviceUser and
    SSHSession. (Issue tracker: #2413).

Corrections:

  - ConfM.jar: Enumeration of floats and integers with pattern restrictions
    were not handled correctly by the ConfM library. This has been fixed.

  - The bundled pyang tool was broken on win32 installs. Better instructions
    on how to install the Python prerequisites have been added as well.

  - The confmrc source script didn't work properly. This has been fixed.

  - A small number of deficiencies have been fixed in the bundled VPN
    example/demo.

  - The ConfM test suites are from now on bundled in the release package.
    This has been done to improve transparency and to provide a broader set
    of example code to be used as reference.

  - Copyright notices have been updated to 2009.


confm-1.3 [January 22, 2009]
===============================

Enhancements:

  - confm: The bundled examples has been made relocatable, i.e. they
    can now be copied out from the examples/ directory in the confm
    distribution. For this to work you need to set the CONFM_DIR
    environment variable. This is explained in the README file
    accompanying each example.

  - pyang: The YANG compiler is now bundled with ConfM, i.e. it is now
    possible to write YANG modules and convert them to confspec 
    files.

Corrections:

  - confdc: Confspec files which used element names colliding with
    reserved words in the Java language lead to runtime errors. This
    has been fixed.


confm-1.2.3 [December 12, 2008]
===============================

Enhancements:

  - confm: support for typeless leaves (existence elements) has been added,
  see Javadoc Exists class documentation.

  - confm: "--java-class-naming-fixed" flag has ben added to confdc to make
    the class name generator more deterministic.

Corrections:

  - confdc: confdc on windows did not work if it was installed under a path
    containing space characters, e.g. under "C:\Program Files\
    ....". Furthermore, it could not compile files with space chars in the
    path. This has been fixed. (Issue #1877)

  - confdc: if an element name was used several times in a confspec, 'condfc
    --confm-emit-java' sometimes failed to generate unique class names. This
    has been fixed.

  - confdc: two superfluous subdirectories (src/confd/confd_aaa_bridge and
    src/confd/webui) and their underlying files have been removed.

  - confm: when ConfM connects using TCP (not talking SSH) to a SSH server,
    confm generates misleading error messages. This has been fixed. (Issue
    #1530).

  - confm: the restriction method xs:length was not implemented for data type
    confd:HexList. This has been fixed.

  - confm: classes IPv4Prefix and IPv6Prefix weere incorrectly named; the
    second letter "P" should be lower case to conform with the confd
    namespace. This has been fixed.

  - confm: there was a fault in the generated code for a container class'
    access methods for the children in a container. The class name rather than
    the confspec tag name is used in the method name. This would lead to a
    problem in the XMLParser that it fails to create the child. This has been
    fixed.

  - DHCP example: ant target "clean" invoked make, which doesn't work on
    Windows. This has been fixed.

  - VpnApp example: ConfM VpnApp example now puts its internal log file in
    current working  directory instead of /tmp.

  - VpnApp example: when running ConfM VpnApp example together with ConfD 2.6,
    the example failed to start the three ConfD instances. This has been
    fixed.


confm-1.2.2 [September 25, 2008]
=================================

Enhancements:

  - VpnApp example: VpnApp example can now be executed on Windows. The ConfD
    nodes still has to be built and executed on a Linux machine).

Corrections:

  - confdc: too long argument string to confdc compiler on Windows led to
    internal buffer overwrite. This has been fixed.


confm-1.2.1 [Septermber 11, 2008]
=================================

Enhancements:

  - inm: connection timeouts has been added to the SSHCOnnection
    class. (Issue: #1530)

  - inm: a new TCPConnection class to make TCPConnection and TCPSession
    symmetrical to the SSHConnection and SSHSession classes has been
    added. (Issue #1530)

  - ConfM: added support for Microsoft Windows.

  - VpnApp example: Tunnels are drawn as dashed lines until they are commited.

  - VpnApp example: Asks before it exit.

  - VpnApp example: The pop-up dialog saying "Commited to all devices"
    now says "Commited to all live devices, backlogged for unavailable
    devices".

Corrections:

  - Examples: A major rewrite of README files for all examples has been done.

  - Examples: In some cases the examples used confdc from ConfD via the
    CONFD_DIR environment variable. Instead, the confdc that comes with ConfM
    should have been used. This has been fixed.

  - Examples: All examples now assume that ConfD is also installed on the same
    machine and communication between ConfM and ConfD is done over the 
    loopback interface. All examples have also an additional description on
    how to proceed when ConfD is installed on another machine.

  - VpnApp example: several bugs have been fixed.

  - VpnApp example: The graphical rendering of routers and tunnels was
    corrupt when using Java-1.5 (not Java-1.6).

Non-backwards compatible enhancements:

  - VpnApp example: If any of the buttons in the upper toolbar is
    pressed the NETCONF logs are first cleared. If you want to keep
    the logs use shift-click.


confm-1.2 [June 30, 2008]
=========================

Non-backwards compatible enhancements:

  - inm: SSH Channel support has been added to the Transport interface.

Enhancements:

  - confm: the VPN application example has been updated and added to the
    examples directory.

  - confm: the ConfD development tools are now shipped together with ConfM,
    in particular the confd compiler that is needed to generate the Java
    classes from the data model.


confm-1.1 [April 14, 2008]
==========================

  Initial release.
