<project name="simple" basedir="." default="main">
  <property environment="env"/>
  <property name="confm.dir"     location="${env.CONFM_DIR}"/>
  <property name="src.dir"       value="src"/>
  <property name="gen.dir"       value="src/gen"/>
  <property name="build.dir"     value="build"/>
  <property name="classes.dir"   value="${build.dir}/classes"/>
  <property name="jar.dir"       value="${build.dir}/jar"/>
  <property name="main-class"    value="dhcp.Main"/>
  <property name="confm-jar.dir" value="${env.CONFM_DIR}/jar"/>
  <property name="ganymed.dir"   value="${env.CONFM_DIR}/jar/ganymed"/>
  <property name="confdc"        value="${env.CONFM_DIR}/bin/confdc"/>
  
  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${gen.dir}"/>
    <delete file="Simple.schema"/> 
    <delete>
      <fileset dir="${src.dir}" includes="*.java package.html"/>
    </delete>
    <delete>
      <fileset dir="." includes="*.xso"/>
    </delete>
    <delete>
      <fileset dir="." includes="*.fxs"/>
    </delete>
  </target>

  <target name="generate">
    <exec executable="${confdc}" failonerror="true">
      <arg line="-c confd/hosts.yang"/>
    </exec>
    <!-- urn:ietf:params:xml:ns:yang:ietf-inet-types -->
    <mkdir dir="${gen.dir}/inet"/>
    <copy todir="yang" overwrite="true">
      <fileset dir="${confm.dir}/src/confm/yang"/>
    </copy>
    <exec executable="${confdc}" failonerror="true">
      <arg value="--java-class-naming"/>
      <arg value="2"/>
      <arg value="--external-schema"/>
      <arg value="--confm-emit-java"/>
      <arg value="src/gen/inet"/>
      <arg value="yang/ietf-inet-types.fxs"/>
    </exec>
    <mkdir dir="${gen.dir}"/>
    <exec executable="${confdc}" failonerror="true">
      <arg value="-f"/>
      <arg value="yang"/>
      <arg value="--external-schema"/>
      <arg value="--confm-emit-java"/>
      <arg value="src/gen"/>
      <arg value="hosts.fxs"/>
    </exec>
  </target>

  <target name="compile" depends="generate">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="on"
           debuglevel="lines,vars,source"  >
      <classpath location="${confm-jar.dir}/ConfM.jar"/>
      <classpath location="${confm-jar.dir}/INM.jar"/>
    </javac>
  </target>
  
  <target name="jar" depends="compile">
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
      <manifest>
        <attribute name="Main-Class" value="${main-class}"/>
      </manifest>
    </jar>
  </target>
  
  <target name="run1" depends="compile">
    <copy file="src/gen/Simple.schema" todir="."/> 
    <java classname="simple.Main" fork="true">
      <arg value="-n"/>
      <arg value="6"/>
      <arg value="-t"/>
      <classpath location="${confm-jar.dir}/ConfM.jar"/>
      <classpath location="${confm-jar.dir}/INM.jar"/>
      <classpath location="${ganymed.dir}/ganymed-ssh2-build251beta1.jar"/>
      <classpath location="build/classes" />
    </java>
  </target>
  
  <target name="run" depends="compile" >
    <copy file="src/gen/Simple.schema" todir="."/> 
    <java classname="simple.Main" fork="true">
      <classpath location="${confm-jar.dir}/ConfM.jar"/>
      <classpath location="${confm-jar.dir}/INM.jar"/>
      <classpath location="${ganymed.dir}/ganymed-ssh2-build251beta1.jar"/>
      <classpath location="build/classes"/>
    </java>
  </target>
  
  <target name="clean-build" depends="clean,jar"/>
  
  <target name="main" depends="environ,compile,run"/>
  
  <target name="notpresent" if="environ.badpath">
    <fail message="** You need to set environment varible CONFM_DIR to where ConfM was installed "/>
  </target>

  <target name="environ">
    <condition property="environ.badpath" >
      <not>
        <available classname="com.tailf.confm.Confd"
                   classpath="${confm-jar.dir}/ConfM.jar"/>
      </not>
    </condition>
    <antcall target="notpresent"/>
  </target>
</project>
